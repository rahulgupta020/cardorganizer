{"version":3,"sources":["Filesave.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["Filesave","props","className","onSubmit","this","submitFile","htmlFor","type","name","onChange","onChangeInfo","id","onChangeFile","Button","color","onClick","cardCancel","Component","Main","addcard","setState","prev","addcount","filesavestate","event","fileValue","target","files","extenValue","split","pop","sizeValue","Math","ceil","size","typeValue","onChangeInfo1","e","newInfoValue","value","preventDefault","items","state","Object","keys","infoValue","length","alert","push","selectbtn","MasterChecked","SelectedList","filter","selected","deselectbtn","deletebtn","arr1","arr2","unique1","o","indexOf","unique2","unique","concat","handleClose","showModal","editbtn","map","selectitem","oldInfoValue","onSubmitUpdate","forEach","item","index","bind","bitems","checkedCheckBox","file","targetValue","it","tempList","sitem","checked","totalItems","totalCheckedItems","aitem","Array","_","i","Table","bordered","striped","onAllCheck","onSingleCheck","onAllCheck1","Modal","show","onHide","Header","closeButton","Title","Body","style","borderStyle","width","edititem","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb1716ca.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport './Style.css';\n\nclass Filesave extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"card-container\">\n                <div className=\"card\">\n                    <h4>File save card</h4>\n                    <form onSubmit={this.props.submitFile}>\n                        <label htmlFor=\"info\">Info: .</label>\n                        <input type=\"text\" name=\"info\" onChange={this.props.onChangeInfo} /><br /><br />\n                        <label htmlFor=\"myfile\">File: .</label>\n                        <input type=\"file\" id=\"myfile\" name=\"myfile\" onChange={this.props.onChangeFile} /><br /><br />\n                        <Button color=\"success\" type=\"submit\">Save</Button>{' '}\n                        <Button color=\"danger\" type=\"button\" onClick={this.props.cardCancel}>Cancel</Button>\n                        <br /><br />\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Filesave;\n","import React, { Component } from \"react\";\nimport { Button, Table } from \"reactstrap\";\nimport { Modal } from \"react-bootstrap\";\nimport './Style.css';\nimport Filesave from \"./Filesave\";\n\nclass Main extends Component {\n    constructor(props) {\n        super(props)\n        this.onChangeInfo = this.onChangeInfo.bind(this);\n        this.onChangeFile = this.onChangeFile.bind(this);\n\n        this.state = {\n            filesavestate: false,\n            addcount: 0,\n\n            infoValue: '',\n            fileValue: '',\n            extenValue: '',\n            sizeValue: '',\n            typeValue: '',\n            items: [],\n            bitems: [],\n\n            checkedCheckBox: false,\n            MasterChecked: false,\n            SelectedList: [],\n            file: [],\n\n            showModal: false,\n            newInfoValue: '',\n            oldInfoValue: '',\n\n            targetValue: true\n        };\n    }\n\n\n    addcard = () => {\n        this.setState(prev => ({ addcount: prev.addcount + 1 }))\n        this.setState({ filesavestate: true });\n        //console.log(\"add card\")\n    }\n\n    onChangeInfo(event) {\n        this.setState({ infoValue: event.target.value })\n    }\n\n    onChangeFile = (event) => {\n        this.setState({ fileValue: event.target.files[0].name });\n        this.setState({ extenValue: event.target.files[0].name.split('.').pop() })\n        this.setState({ sizeValue: Math.ceil((event.target.files[0].size) / 1024) });\n        if (event.target.files[0].name.split('.').pop() === \"pdf\" ||\n            event.target.files[0].name.split('.').pop() === \"PDF\"\n        ) {\n            this.setState({ typeValue: \"pdf\" })\n        }\n        else if (event.target.files[0].name.split('.').pop() === \"docx\") {\n            this.setState({ typeValue: \"Doc\" })\n        }\n        else if (event.target.files[0].name.split('.').pop() === \"png\" ||\n            event.target.files[0].name.split('.').pop() === \"PNG\" ||\n            event.target.files[0].name.split('.').pop() === \"jpg\" ||\n            event.target.files[0].name.split('.').pop() === \"JPEG\" ||\n            event.target.files[0].name.split('.').pop() === \"gif\" ||\n            event.target.files[0].name.split('.').pop() === \"svg\" ||\n            event.target.files[0].name.split('.').pop() === \"SVG\"\n        ) {\n            this.setState({ typeValue: \"Image\" })\n        }\n        else if (event.target.files[0].name.split('.').pop() === \"xlsx\" ||\n            event.target.files[0].name.split('.').pop() === \"xlsm\" ||\n            event.target.files[0].name.split('.').pop() === \"xlsb\" ||\n            event.target.files[0].name.split('.').pop() === \"xltx\" ||\n            event.target.files[0].name.split('.').pop() === \"xltm\" ||\n            event.target.files[0].name.split('.').pop() === \"xls\" ||\n            event.target.files[0].name.split('.').pop() === \"xlt\" ||\n            event.target.files[0].name.split('.').pop() === \"csv\"\n        ) {\n            this.setState({ typeValue: \"Excel\" })\n        }\n        else {\n            this.setState({ typeValue: \"Others\" })\n        }\n    }\n\n    onChangeInfo1 = (e) => {\n        //console.log(\"onChangeInfo1\")\n        this.setState({ newInfoValue: e.target.value })\n    }\n\n    submitFile = (event) => {\n        event.preventDefault();\n        let items = [...this.state.items];\n        if (Object.keys(this.state.infoValue).length == 0) {\n            alert(\"Value is blank....\")\n        }\n        else {\n            //console.log(\"hai\")\n            items.push({ infoValue: this.state.infoValue, fileValue: this.state.fileValue, extenValue: this.state.extenValue, typeValue: this.state.typeValue, sizeValue: this.state.sizeValue })\n            this.setState({\n                items,\n                infoValue: '',\n                fileValue: '',\n                extenValue: '',\n                typeValue: '',\n                sizeValue: ''\n            });\n            this.setState({ filesavestate: false })\n            this.setState({ addcount: 0 })\n            alert(\"Data Inserted into table..\")\n        }\n\n\n    }\n\n\n    cardCancel = (e) => {\n        this.setState({ filesavestate: false })\n        this.setState({ addcount: 0 })\n    }\n\n\n\n    onSingleCheck(e, it) {\n        let tempList = this.state.items;\n        tempList.map((sitem) => {\n            if (sitem.infoValue === it.infoValue) {\n                sitem.selected = e.target.checked;\n            }\n            return sitem;\n        });\n        const totalItems = this.state.items.length;\n        const totalCheckedItems = tempList.filter((e) => e.selected).length;\n        this.setState({\n            MasterChecked: totalItems === totalCheckedItems,\n            // file: tempList,\n            SelectedList: this.state.items.filter((e) => e.selected)\n        })\n    }\n\n    onAllCheck(e) {\n        let tempList = this.state.items;\n        this.setState({ targetValue: e.target.checked, })\n        tempList.map((aitem) => (\n            aitem.selected = e.target.checked\n        ));\n        this.setState({\n            MasterChecked: e.target.checked,\n            SelectedList: this.state.items.filter((e) => e.selected),\n        });\n    }\n\n    onAllCheck1(e) {\n\n        if (this.state.SelectedList && this.state.SelectedList.length) {\n            let tempList = this.state.items;\n            this.setState({ targetValue: e.target.checked, })\n            tempList.map((aitem) => (\n                aitem.selected = e.target.checked\n            ));\n            this.setState({\n                MasterChecked: e.target.checked,\n                SelectedList: this.state.items.filter((e) => e.selected),\n            });\n            alert(\"De-Selected all checkbox\")\n\n        }\n        else {\n            alert(\"NO checkbox selected....\")\n        }\n    }\n\n    getSelectedRows() {\n        this.setState({\n            SelectedList: this.state.items.filter((e) => e.selected),\n        });\n    }\n\n\n    selectbtn = (e) => {\n\n        // this.state.items.map(selectbtnitem =>(\n        //     console.log(selectbtnitem)\n        // ))\n        this.setState({\n            MasterChecked: !this.state.MasterChecked,\n            SelectedList: this.state.items.filter((e) => e.selected),\n        })\n    }\n\n    deselectbtn = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            MasterChecked: !this.state.MasterChecked,\n            SelectedList: this.state.items.filter((e) => e.selected),\n        })\n    }\n\n\n\n    deletebtn = (e) => {\n        // const abc=this.tabledata.items.filter((value)=>value.checked==false)\n        // this.setState(tabledata:abc);\n        if (this.state.SelectedList && this.state.SelectedList.length) {\n            e.preventDefault();\n            //console.log(\"delete\")\n            const arr1 = this.state.items;\n            const arr2 = this.state.SelectedList;\n            //console.log(\"Filter\")\n            // const arr3 = arr1.filter(value => arr2.includes(value)).filter((value, index, self) => self.indexOf(value) === index);\n            // console.log(arr3)\n            let unique1 = arr1.filter((o) => arr2.indexOf(o) === -1);\n            let unique2 = arr2.filter((o) => arr1.indexOf(o) === -1);\n\n            const unique = unique1.concat(unique2);\n            //console.log(unique)\n            this.setState({ items: unique })\n            alert(\"Row is Deleted\")\n        }\n        else {\n            alert(\"NO checkbox selected....\")\n        }\n    }\n\n    handleClose = () => {\n        this.setState({ showModal: false })\n    }\n    editbtn = (e) => {\n        if (this.state.SelectedList && this.state.SelectedList.length) {\n            this.setState({ showModal: true })\n            e.preventDefault();\n            //console.log(\"edit\")\n            this.state.SelectedList.map((selectitem) => (\n                this.setState({ oldInfoValue: selectitem.infoValue })\n            ))\n        }\n        else {\n            alert(\"NO checkbox selected....\")\n        }\n        // this.setState({ showModal: true})\n        // e.preventDefault();\n        // console.log(\"edit\")\n        // this.state.SelectedList.map((selectitem) =>(\n        //     this.setState({oldInfoValue: selectitem.infoValue})\n        // ))\n\n    }\n\n    onSubmitUpdate = (e) => {\n        e.preventDefault();\n        //console.log(\"edit submit\")\n        let search_to_change = this.state.oldInfoValue\n        //console.log(search_to_change)\n        this.state.items.forEach((item, index) => {\n            if (item.infoValue == this.state.oldInfoValue) {\n                this.state.items[index].infoValue = this.state.newInfoValue\n            }\n        })\n        this.setState({ showModal: false })\n        alert(\"Update Successfully...\")\n\n        // console.log(this.state.oldInfoValue)\n        // console.log(this.state.newInfoValue)\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"Main\">\n                <div className=\"heading\">\n                    <h1 className=\"heading-text\">Interactive Card Organizer</h1>\n                </div>\n                <div className=\"button-container2\">\n                    <Button onClick={this.addcard}>\n                        Add a Card\n                    </Button>\n                </div>\n                <br /><br />\n\n                {(this.state.filesavestate) ?\n                    [...Array(this.state.addcount)].map((_, i) =>\n                        <Filesave submitFile={this.submitFile}\n                            onChangeInfo={this.onChangeInfo}\n                            onChangeFile={this.onChangeFile}\n                            cardCancel={this.cardCancel} key={i} />\n                    )\n                    :\n                    null}\n\n\n                <h1>Table Card Data</h1>\n                <form>\n                    <div className=\"table-container\">\n                        <Table bordered striped className=\"custom-table\">\n                            <thead>\n                                <tr>\n                                    <th>\n                                        <input type=\"checkbox\"\n                                            checked={this.state.MasterChecked}\n                                            onChange={(e) => this.onAllCheck(e)}\n                                        />\n                                    </th>\n                                    <th>Info</th>\n                                    <th>File name</th>\n                                    <th>Extension</th>\n                                    <th>Type</th>\n                                    <th>Size(KB)</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.items.map((it) => {\n                                    return (\n                                        <tr key={it.infoValue} className={it.selected ? \"selected\" : \"\"}>\n                                            <td>\n                                                <input type=\"checkbox\"\n                                                    checked={this.state.MasterChecked}\n                                                    checked={it.selected}\n                                                    onChange={(e) => this.onSingleCheck(e, it)} />\n\n                                            </td>\n                                            <td>{it.infoValue}</td>\n                                            <td>{it.fileValue}</td>\n                                            <td>{it.extenValue}</td>\n                                            <td>{it.typeValue}</td>\n                                            <td>{it.sizeValue}</td>\n                                        </tr>\n                                    )\n                                })}\n\n                            </tbody>\n                        </Table>\n                    </div>\n\n\n                    <div className=\"btn4\">\n                        <div id=\"ck-button\">\n                            <label>\n                                <input type=\"checkbox\" value=\"1\"\n                                    checked={this.state.MasterChecked}\n                                    onChange={(e) => this.onAllCheck(e)}\n                                /><span>Select All</span>\n                            </label>\n                        </div>\n\n                        <div id=\"ck-button\">\n                            <label>\n                                <input type=\"checkbox\" value=\"1\"\n                                    checked={this.state.MasterChecked}\n                                    onChange={(e) => this.onAllCheck1(e)}\n                                /><span>De-Select All</span>\n                            </label>\n                        </div>\n                        <br /><br />\n                        <div className=\"button-container1\">\n                            <Button onClick={this.deletebtn} >Delete</Button>\n                            <Button onClick={this.editbtn} >Edit</Button>\n                        </div>\n                    </div>\n                </form>\n\n                <br />\n\n                {/* <button onClick={() => this.getSelectedRows()}>\n                    Get Selected Items {this.state.SelectedList.length} \n                </button>                  */}\n\n\n\n\n\n                <Modal show={this.state.showModal} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Update Your Card...</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body>\n\n                        <div style={{ borderStyle: \"double\", width: \"350px\" }}>\n                            <h4>File save card</h4>\n\n\n                            <form onSubmit={this.onSubmitUpdate}>\n\n                                {this.state.SelectedList.map(edititem => {\n                                    return (\n                                        <>\n                                            {/* <label htmlFor=\"info\">Old Info: .</label> \n                                <input type=\"text\" name=\"info\" value={edititem.infoValue} onChange={this.onChangeInfo} /><br /><br /> */}\n                                            {/* projects.find( p => p.value === 'jquery-ui' && ( p.desc = 'your value', true ) ); */}\n                                            {/* this.props.items.find( p => p.infoValue === {edititem.infoValue} && ( p.infoValue = \"kajal\", true)); */}\n\n\n                                        </>\n                                    )\n                                })}\n                                <p>old value :- {this.state.oldInfoValue}</p>\n                                <label htmlFor=\"info\">New Info: .</label>\n                                <input type=\"text\" name=\"info\" onChange={this.onChangeInfo1} /><br /><br />\n\n                                {/* <p>new value :- {this.state.newInfoValue}</p> */}\n                                {/* <label htmlFor=\"myfile\">File: .</label>\n                            <input type=\"file\" id=\"myfile\" name=\"myfile\" onChange={this.onChangeFile} /><br /><br /> */}\n                                <Button color=\"warning\">Update</Button>{' '}\n                                {/* <Button color=\"danger\">Cancel</Button>{' '} */}\n                                <br /><br />\n                            </form>\n                        </div>\n\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        {/* <Button variant=\"secondary\" onClick={this.handleClose}>\n                        Close\n                    </Button> */}\n                    </Modal.Footer>\n\n                </Modal>\n\n            </div>\n        )\n    }\n}\n\nexport default Main","import React, { Component } from 'react';\n\nimport Main from \"./Main\"\n\nclass App extends Component{\n\nrender(){\n  const name = \"rahul\";\n  return(\n  <>\n    <Main />\n  </>\n  )};\n\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\n\n\n\n\n\n\n\n\n\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}